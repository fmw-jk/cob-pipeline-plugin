<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:f="/lib/form">
  <st:documentation>
    "Generation" button that submits the form but without a page transition (like the apply button)
    and then generates the configured pipeline.
    See hudson.util.FormApply for the server-side code.
    <st:attribute name="value">
      The text of the generation button. Something like "Generate", etc.
    </st:attribute>
  </st:documentation>
  
  <input type="hidden" name="core:apply" value="" />
  <input type="button" value="${attrs.value ?: '%generate'}" class="generation-button generationButton" /><!-- generationButton is legacy -->
  
  <script>var inst = <st:bind value="${instance}"/>
  	Behaviour.specify("INPUT.generation-button", 'generation', 0, function (e) {
        var id;
        var containerId = "container"+(iota++);

        var responseDialog = new YAHOO.widget.Panel("wait"+(iota++), {
            fixedcenter:true,
            close:true,
            draggable:true,
            zindex:4,
            modal:true,
            visible:false
        });

        responseDialog.setHeader("Error");
        responseDialog.setBody("&lt;div id='"+containerId+"'&gt;&lt;/iframe&gt;");
        responseDialog.render(document.body);
        var target; // iframe

        function attachIframeOnload(target, f) {
            if (target.attachEvent) {
                target.attachEvent("onload", f);
            } else {
                target.onload = f;
            }
        }

        var genButton = makeButton(e,function (e) {
            var f = findAncestor(e.target, "FORM");
            

            // create a throw-away IFRAME to avoid back button from loading the POST result back
            id = "iframe"+(iota++);
            target = document.createElement("iframe");
            target.setAttribute("id",id);
            target.setAttribute("name",id);
            target.setAttribute("style","height:100%; width:100%");
            $(containerId).appendChild(target);

            attachIframeOnload(target, function () {
                if (target.contentWindow &amp;&amp; target.contentWindow.applyCompletionHandler) {
                    // apply-aware server is expected to set this handler
                    target.contentWindow.applyCompletionHandler(window);
                } /*else {
                    // otherwise this is possibly an error from the server, so we need to render the whole content.
                    var r = YAHOO.util.Dom.getClientRegion();
                    responseDialog.cfg.setProperty("width",r.width*3/4+"px");
                    responseDialog.cfg.setProperty("height",r.height*3/4+"px");
                    responseDialog.center();
                    responseDialog.show();
                }*/
                window.setTimeout(function() {// otherwise Firefox will fail to leave the "connecting" state
                    $(id).remove();
                },0)
            });

            f.target = target.id;
            f.elements['core:apply'].value = "true";
            try {
		    	if (valid()!=true) {
		    		document.getElementById('status').innerHTML = '<b>${%notValid}</b>';
		    		document.getElementById('msg').innerHTML = '${%notValidMsg}';
		    		return;
		    	}
		    	else {
	                buildFormTree(f);
	                f.submit();
	                generate();
	            }
            } finally {
                f.elements['core:apply'].value = null;
                f.target = null;
            }
        });
        
        function generate() {
  			genButton.set('disabled',true,false);
  			document.getElementById('status').innerHTML = '<img src="${imagesURL}/spinner.gif" /> <b>${%generating}</b>';
  			document.getElementById('msg').innerHTML = '';
  			
			inst.doGeneratePipeline( function (t) 
			{
  				document.getElementById('status').innerHTML = '<b>' + t.responseObject().status + '</b>';
  				document.getElementById('msg').innerHTML = t.responseObject().message;
  				genButton.set('disabled',false,false);
  			});
			
  		}
	});
  </script>
</j:jelly>