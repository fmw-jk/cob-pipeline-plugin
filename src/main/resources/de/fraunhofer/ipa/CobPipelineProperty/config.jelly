<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
	<f:entry title="${%email}" field="email">
        <f:textbox id="email" onchange="valid()"/>
	</f:entry>
	<f:entry title="${%defaultFork}" field="defaultFork">
        <f:textbox default="${descriptor.getGithubOrg()}"/>
	</f:entry>
	<f:entry title="${%defaultBranch}" field="defaultBranch">
        <f:textbox default="master"/>
	</f:entry>
	<f:block >
	    <f:hetero-list name="rootRepos" hasHeader="true"
	    			   descriptors="${descriptor.rootRepositoryDescriptors}"
	    			   items="${instance.rootRepos}"
	    			   addCaption="${%addRepo}"
	    			   deleteCaption="${%delRepo}"/>
	</f:block>
	<f:bottomButtonBar>
	<f:entry title="${%validation}">
		<table align="center" border="0" cellpadding="0" cellspacing="0" width="100%">
			<tbody><tr>
				<td width="30" style="vertical-align:middle">
              		<div style="float:left" id="valIcon" help="/plugin/cob-pipeline/help-validation.html" />
              	</td>
              	<td width="*" style="vertical-align:middle">
              		<div id="valMsg" />
              	</td>
              	<td width="*" style="vertical-align:middle">
              		<div tooltip="${%validate}">
              		  	<img src="${rootURL}/images/48x48/refresh.png" alt="${%validate}" style="cursor: pointer;" onclick="valid()" height="22" width="22"/>
              		</div>
              	</td>
			</tr></tbody>
		</table>
	</f:entry>
	<f:block>
		<table align="center" border="0" cellpadding="0" cellspacing="0" width="100%">
			<tbody><tr>
				<td width="150">
              		<div style="float:left" help="/plugin/cob-pipeline/help-generateButton.html">
        				<f:generation />
					</div>
              	</td>
              	<td width="*" style="vertical-align:middle">
              		<div id="status" />
              	</td>
            </tr><tr>
            	<td width="150"></td>
            	<td width="*">
              		<div id="msg" />
              	</td>
			</tr></tbody>
		</table>
  	</f:block>
    </f:bottomButtonBar>
  	<script>
  		var des = <st:bind value="${descriptor}"/>
  		function validEmail() {
			var email = document.getElementById('email');
			
  			if (email.value.length==0) {
		    	return document.getElementById('valMsg').innerHTML = "${%noEmail}" + "<br/>";
		    }
		    return "";		    
  		}
  		
  		function validRepos() {
  			var repos = document.getElementsByName('repoName');
  			
  			if (repos.length==0) {
		      	return document.getElementById('valMsg').innerHTML = "${%noRepo}" + "<br/>";
		    }
		    return "";
  		}
  		
  		function generateFullName(id) {
  			var repoName = document.getElementById(id+"repoName");
  			var suffix = document.getElementById(id+"suffix");
  			
  			if (suffix.value.length==0) {
  				document.getElementById(id+'fullName').value = repoName.value;
  			}
  			else {
  				document.getElementById(id+'fullName').value = repoName.value + '__' + suffix.value;
  			}
  			valid();
  		}
  		
  		function updateEnv(id) {
  			var rosDistros = document.getElementsByTagName('input');
  			var rosDistroList = new Array();
  			
  			for(i=0;i&lt;rosDistros.length;i++) {
  				if (rosDistros[i].id == id+'rosDistro') {
	  				if(rosDistros[i].checked) {
				        rosDistroList.push(rosDistros[i].value);
				    }
  				}
	        }
	        
	        if (rosDistroList.length==0) {
	        	//TODO raise warning to select at least one rosDistro
	        	document.getElementById(id+"regularBuild").innerHTML = '<b>Select ${%rosDistro} first!</b>';
	        	//return;
	        }
	        
	        des.getSupportedUbuntuReleases(rosDistroList.toString(), function(t) {
		        getSelected(id, t.responseObject());
		        generateMatrix(id, t.responseObject(), function() {
		        	var inputs = document.getElementsByTagName('input');
		        	var boxIsChecked = window[id+'isChecked'];
		        	
		        	for(i=0;i&lt;inputs.length;i++) {
		        		if (inputs[i].name.split("__")[0]==document.getElementById(id+'selection').value &amp;&amp; inputs[i].name.split("__")[1]==document.getElementById(id+'arch').value) {
		        			document.getElementById(id+"matrix"+inputs[i].name.split("__")[0]+inputs[i].name.split("__")[1]).disabled = true;
		        		}
		        		else if (inputs[i].id.substring(0, (id+'matrix').length)==id+'matrix') {
		        			boxIsChecked(inputs[i].name.split("__")[0], inputs[i].name.split("__")[1])
		        		}
		        	}	        	
	            });
	        });
  		}
  		
  		function getSelected(id, ubuntuList) {
  			var selected = document.getElementById(id+'selection').value;
	        
	        if (selected == "" || typeof selected === 'undefined') {
	        	try {
		        	window[id+'Inst'].getPrioUbuntuDistro(function(t) {
		        		generateSelection(id, ubuntuList, t.responseObject());
		        	});
	        	}
	        	catch(err) {
	        		generateSelection(id, ubuntuList, "");
	        	}
	        }
	        else {
	        	generateSelection(id, ubuntuList, selected);
	        }
  		}
  		
  		function generateSelection(id, ubuntuList, selected) {
  			var selection = document.getElementById(id+'selection');
	        var option=document.createElement("option");
	        
	        var len = selection.length;
	        for(i=0;i&lt;len;i++) {
	        	selection.remove(0);
	        }

      		if (ubuntuList.length==0) {
      			option=document.createElement("option");
	        	option.text="No shared Ubuntu Release";
	        	selection.add(option, null);
	        }
	        else {
	        	for(i=0;i&lt;ubuntuList.length;i++) {
		        	option=document.createElement("option");
		        	option.text= ubuntuList[i];
	        		if (selected==ubuntuList[i]) {
	        			option.selected = true;
		        	}
		        	selection.add(option, null);
	        	}
        	}
  		}
  		
  		function generateMatrix(id, ubuntuList, callback) {
  			if (ubuntuList.length==0) {
  				document.getElementById(id+"regularBuild").innerHTML = '<b>No shared Ubuntu Release! Change selection.</b>';
  			}
  			else  {
  				var head = '<td width="*">
	  				<table border="0" width="*">
			      	<td width="100"></td>
			      	<th align="center" width="*"><font size="2px">${%ubuntu}</font></th>
			      	<td width="25"></td>
			      	<th colspan="2" align="center" width="150"><font size="2px">${%arch}</font></th>
					<tr/>
			      	<td width="100"></td>
			      	<td align="center" width="*"></td>
			      	<td width="25"></td>
			      	<td align="center" width="75"><b>${%amd64}</b></td>
			      	<td align="center" width="75"><b>${%i386}</b></td>
					<tr></tr>';
					
				var tail = '</table></td>';
				
				var body = '';
		      		
	      		for (i=0;i&lt;ubuntuList.length;i++) {
	      			body += '<td width="100"></td>
						<td align="center" width="*">
		                	<b>' + ubuntuList[i] + '</b>
		              	</td>
	      				<td width="25"></td>
						<td align="center" width="*">
		                	<input type="checkbox" id="' + id + 'matrix' + ubuntuList[i] + 'amd64" name="' + ubuntuList[i] + '__amd64__env"/>
		              	</td><td align="center" width="*">
	                		<input type="checkbox" id="' + id + 'matrix' + ubuntuList[i] + 'i386" name="' + ubuntuList[i] + '__i386__env"/>
	              		</td>
						<tr></tr>';
	      		}
	      		document.getElementById(id+"regularBuild").innerHTML = head + body + tail;
				callback();
  			}
  		}
  		
  		function validFullNames() {
  			var fullNames = document.getElementsByName('fullName');
  			
  			if (fullNames.length!=0) {
			    for (i=0;i&lt;fullNames.length;i++) {
			    	for (j=0;j&lt;fullNames.length;j++) {
			    		if(i!=j) {
			    			if(fullNames[i].value == fullNames[j].value) {
			    				return document.getElementById('valMsg').innerHTML = "${%duplicateFullNames}: " + fullNames[i].value + "<br/>";
			    			}
			    		}
			    	}
			    }
			}
			return "";
  		}
  		
  		function validDeps() {
  			var deps = document.getElementsByName('depName');
  			
  			if (deps.length!=0) {
			    for (i=0;i&lt;deps.length;i++) {
			    	for (j=0;j&lt;deps.length;j++) {
			    		if(i!=j) {
			    			if (deps[i].id == deps[j].id) {
				    			if(deps[i].value == deps[j].value) {
				    				return document.getElementById('valMsg').innerHTML = "${%duplicateDeps}: " + deps[i].value + "<br/>in repository: " + document.getElementById(deps[i].id.replace("dep", "repoName")).value;
				    			}
				    		}
			    		}
			    	}
			    }
			}
			return "";
  		}
  	
  		function valid() {
			var result = validEmail();
			result += validRepos();
			result += validFullNames();
			result += validDeps();
			if (result.length!=0) {
				document.getElementById('valMsg').innerHTML = result;
				document.getElementById('valIcon').innerHTML = '<img src="${rootURL}/images/48x48/error.png" alt="${%invalid}" height="22" width="22"/>';
				return false;
			}
			else {
				document.getElementById('valIcon').innerHTML = '<img src="${rootURL}/images/48x48/accept.png" alt="OK" height="22" width="22"/>';
		        document.getElementById('valMsg').innerHTML = "${%ok}";
		        return true;
			}
  		}
  		
  		function initEnv() {
	  		var existentRepos = document.getElementsByName('repoName');

	  		for (i=0;i&lt;existentRepos.length;i++) {
	  			updateEnv(existentRepos[i].id.replace("repoName", ""));
	  		}
  		}
  		
  		initEnv();
  		valid();
  	</script>
</j:jelly>